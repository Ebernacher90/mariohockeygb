; -------------------------------------------------------------------------------------------
; Cut 05
; -------------------------------------------------------------------------------------------
cut05:

        ; Swicth to ROM bank 2
        ld      a,$2
        ld      [$2000],a

        ; Load bitmap
        ld      hl, cut05_tile_data
        ld      de, _VRAM               ; $8000
        ld      bc, cut05_tile_data_size     ; 128 tiles
        call    mem_CopyVRAM            ; load tile data

        ld      a, 0
        ld      de, _SCRN0
        ld      hl, cut05_map_data
        ld      bc, SCRN_VX_B * SCRN_VY_B
        call    mem_CopyVRAM

        ; Swicth back to ROM bank 1
        ld      a,$1
        ld      [$2000],a

        ; Turn on regular palette
        ld      a,%11100100
        ld      [rBGP], a

        ; Remove last animation handler
        call    ClearAnimationHandler

        ;
        ; Animation loop
        ;
        lcd_WaitVBlank                  ; Wait for VBlank to start
        ld      a, $20                  ; Save initial separation to stack
        ld      [ANIMATION_VAR_01], a
        ld      a, -$20                  ; Save initial separation to stack
        ld      [ANIMATION_VAR_02], a

        xor     a                       ; Make sure SCX = 0
        ld      [rSCX], a

        call    ClearFrameCounter       ; Start animation counter
        ld      a, $1
        ld      [ANIMATION_ACTIVE], a

.animation_loop:
        lcd_WaitLine    $30
        ld      a, [ANIMATION_VAR_01]
        ld      [rSCX], a

        lcd_WaitLine    $40
        ld      a, [ANIMATION_VAR_02]
        ld      [rSCX], a

        lcd_WaitLine    $50
        ld      a, [ANIMATION_VAR_01]
        ld      [rSCX], a

        lcd_WaitLine    $60
        ld      a, [ANIMATION_VAR_02]
        ld      [rSCX], a

        lcd_WaitLine    $70
        ld      a, [ANIMATION_VAR_01]
        ld      [rSCX], a

.wait_vblank
        lcd_WaitVBlank

        ld      a, [ANIMATION_VAR_02]
        ld      [rSCX], a

        ; Wait for 1 line again
        ld      a,[rLY]
        cp      $1
        jr      nz,@-4

        ld      a, [ANIMATION_VAR_01]
        dec     a
        dec     a
        cp      $0
        jp      z,.finish_loop
        ld      [ANIMATION_VAR_01],a
        ld      a, [ANIMATION_VAR_02]
        inc     a
        inc     a
        ld      [ANIMATION_VAR_02],a
        jp      .animation_loop

.finish_loop:

        ; Wait a bit
        ld      de,ShortDelayHandler
        call    SetAnimationHandler
        call    WaitAnimation
        call    WaitAnimation

        ; Trigger FadeOut Animation
        ld      de,FadeOutHandler
        call    SetAnimationHandler
        call    WaitAnimation

        ret

; vim: se ts=8 sw=8 expandtab:
